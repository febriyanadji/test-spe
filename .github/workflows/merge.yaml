name: Build Push Deploy Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    if: github.event.pull_request.merged == true
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build soal1 php
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./soal1
          push: true
          tags: febriyanadji/spe-test-soal1:latest

      - name: Build soal2 vue
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./soal2
          push: true
          tags: febriyanadji/spe-test-soal2:latest

      - name: Build soal3 golang
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./soal3
          push: true
          tags: febriyanadji/spe-test-soal3:latest
  
  deploy:
    needs: build-and-push
    if: github.event.pull_request.merged == true
    name: Deploy to Server
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: add private key & add to known host
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          eval $(ssh-agent -s)
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config;
          cat "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa;
          ssh-keyscan -H ${SSH_HOST} >> ~/.ssh/known_hosts
      - name: run docker compose
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        run: |
          export DOCKER_HOST=ssh://${SSH_USERNAME}@${SSH_HOST}
          docker-compose up -f docker-compose.soal4.yaml -d
